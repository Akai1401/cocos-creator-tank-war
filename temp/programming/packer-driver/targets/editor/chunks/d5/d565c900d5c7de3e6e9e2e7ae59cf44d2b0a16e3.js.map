{"version":3,"sources":["file:///Users/akai/Data/cocos/TankWar/node_modules/debug/src/common.js"],"names":["_cjsLoader","_req","__cjsMetaURL","url","define","exports","require","module","__filename","__dirname","setup","env","createDebug","debug","default","coerce","disable","enable","enabled","humanize","destroy","Object","keys","forEach","key","names","skips","formatters","selectColor","namespace","hash","i","length","charCodeAt","colors","Math","abs","prevTime","enableOverride","namespacesCache","enabledCache","args","self","curr","Number","Date","ms","diff","prev","unshift","index","replace","match","format","formatter","val","call","splice","formatArgs","logFn","log","apply","useColors","color","extend","defineProperty","enumerable","configurable","get","namespaces","set","v","init","delimiter","newDebug","save","split","len","push","RegExp","slice","map","toNamespace","join","name","test","regexp","toString","substring","Error","stack","message","console","warn","load","_cjsExports"],"mappings":"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","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from 'ms';\nlet _cjsExports;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n\n /**\n  * This is the common logic for both the Node.js and web browser\n  * implementations of `debug()`.\n  */\n\n function setup(env) {\n \tcreateDebug.debug = createDebug;\n \tcreateDebug.default = createDebug;\n \tcreateDebug.coerce = coerce;\n \tcreateDebug.disable = disable;\n \tcreateDebug.enable = enable;\n \tcreateDebug.enabled = enabled;\n \tcreateDebug.humanize = require('ms');\n \tcreateDebug.destroy = destroy;\n\n \tObject.keys(env).forEach(key => {\n \t\tcreateDebug[key] = env[key];\n \t});\n\n \t/**\n \t* The currently active debug mode names, and names to skip.\n \t*/\n\n \tcreateDebug.names = [];\n \tcreateDebug.skips = [];\n\n \t/**\n \t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n \t*\n \t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n \t*/\n \tcreateDebug.formatters = {};\n\n \t/**\n \t* Selects a color for a debug namespace\n \t* @param {String} namespace The namespace string for the debug instance to be colored\n \t* @return {Number|String} An ANSI color code for the given namespace\n \t* @api private\n \t*/\n \tfunction selectColor(namespace) {\n \t\tlet hash = 0;\n\n \t\tfor (let i = 0; i < namespace.length; i++) {\n \t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n \t\t\thash |= 0; // Convert to 32bit integer\n \t\t}\n\n \t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n \t}\n \tcreateDebug.selectColor = selectColor;\n\n \t/**\n \t* Create a debugger with the given `namespace`.\n \t*\n \t* @param {String} namespace\n \t* @return {Function}\n \t* @api public\n \t*/\n \tfunction createDebug(namespace) {\n \t\tlet prevTime;\n \t\tlet enableOverride = null;\n \t\tlet namespacesCache;\n \t\tlet enabledCache;\n\n \t\tfunction debug(...args) {\n \t\t\t// Disabled?\n \t\t\tif (!debug.enabled) {\n \t\t\t\treturn;\n \t\t\t}\n\n \t\t\tconst self = debug;\n\n \t\t\t// Set `diff` timestamp\n \t\t\tconst curr = Number(new Date());\n \t\t\tconst ms = curr - (prevTime || curr);\n \t\t\tself.diff = ms;\n \t\t\tself.prev = prevTime;\n \t\t\tself.curr = curr;\n \t\t\tprevTime = curr;\n\n \t\t\targs[0] = createDebug.coerce(args[0]);\n\n \t\t\tif (typeof args[0] !== 'string') {\n \t\t\t\t// Anything else let's inspect with %O\n \t\t\t\targs.unshift('%O');\n \t\t\t}\n\n \t\t\t// Apply any `formatters` transformations\n \t\t\tlet index = 0;\n \t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n \t\t\t\t// If we encounter an escaped % then don't increase the array index\n \t\t\t\tif (match === '%%') {\n \t\t\t\t\treturn '%';\n \t\t\t\t}\n \t\t\t\tindex++;\n \t\t\t\tconst formatter = createDebug.formatters[format];\n \t\t\t\tif (typeof formatter === 'function') {\n \t\t\t\t\tconst val = args[index];\n \t\t\t\t\tmatch = formatter.call(self, val);\n\n \t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n \t\t\t\t\targs.splice(index, 1);\n \t\t\t\t\tindex--;\n \t\t\t\t}\n \t\t\t\treturn match;\n \t\t\t});\n\n \t\t\t// Apply env-specific formatting (colors, etc.)\n \t\t\tcreateDebug.formatArgs.call(self, args);\n\n \t\t\tconst logFn = self.log || createDebug.log;\n \t\t\tlogFn.apply(self, args);\n \t\t}\n\n \t\tdebug.namespace = namespace;\n \t\tdebug.useColors = createDebug.useColors();\n \t\tdebug.color = createDebug.selectColor(namespace);\n \t\tdebug.extend = extend;\n \t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n \t\tObject.defineProperty(debug, 'enabled', {\n \t\t\tenumerable: true,\n \t\t\tconfigurable: false,\n \t\t\tget: () => {\n \t\t\t\tif (enableOverride !== null) {\n \t\t\t\t\treturn enableOverride;\n \t\t\t\t}\n \t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n \t\t\t\t\tnamespacesCache = createDebug.namespaces;\n \t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n \t\t\t\t}\n\n \t\t\t\treturn enabledCache;\n \t\t\t},\n \t\t\tset: v => {\n \t\t\t\tenableOverride = v;\n \t\t\t}\n \t\t});\n\n \t\t// Env-specific initialization logic for debug instances\n \t\tif (typeof createDebug.init === 'function') {\n \t\t\tcreateDebug.init(debug);\n \t\t}\n\n \t\treturn debug;\n \t}\n\n \tfunction extend(namespace, delimiter) {\n \t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n \t\tnewDebug.log = this.log;\n \t\treturn newDebug;\n \t}\n\n \t/**\n \t* Enables a debug mode by namespaces. This can include modes\n \t* separated by a colon and wildcards.\n \t*\n \t* @param {String} namespaces\n \t* @api public\n \t*/\n \tfunction enable(namespaces) {\n \t\tcreateDebug.save(namespaces);\n \t\tcreateDebug.namespaces = namespaces;\n\n \t\tcreateDebug.names = [];\n \t\tcreateDebug.skips = [];\n\n \t\tlet i;\n \t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n \t\tconst len = split.length;\n\n \t\tfor (i = 0; i < len; i++) {\n \t\t\tif (!split[i]) {\n \t\t\t\t// ignore empty strings\n \t\t\t\tcontinue;\n \t\t\t}\n\n \t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n \t\t\tif (namespaces[0] === '-') {\n \t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.slice(1) + '$'));\n \t\t\t} else {\n \t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n \t\t\t}\n \t\t}\n \t}\n\n \t/**\n \t* Disable debug output.\n \t*\n \t* @return {String} namespaces\n \t* @api public\n \t*/\n \tfunction disable() {\n \t\tconst namespaces = [\n \t\t\t...createDebug.names.map(toNamespace),\n \t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n \t\t].join(',');\n \t\tcreateDebug.enable('');\n \t\treturn namespaces;\n \t}\n\n \t/**\n \t* Returns true if the given mode name is enabled, false otherwise.\n \t*\n \t* @param {String} name\n \t* @return {Boolean}\n \t* @api public\n \t*/\n \tfunction enabled(name) {\n \t\tif (name[name.length - 1] === '*') {\n \t\t\treturn true;\n \t\t}\n\n \t\tlet i;\n \t\tlet len;\n\n \t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n \t\t\tif (createDebug.skips[i].test(name)) {\n \t\t\t\treturn false;\n \t\t\t}\n \t\t}\n\n \t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n \t\t\tif (createDebug.names[i].test(name)) {\n \t\t\t\treturn true;\n \t\t\t}\n \t\t}\n\n \t\treturn false;\n \t}\n\n \t/**\n \t* Convert regexp to namespace\n \t*\n \t* @param {RegExp} regxep\n \t* @return {String} namespace\n \t* @api private\n \t*/\n \tfunction toNamespace(regexp) {\n \t\treturn regexp.toString()\n \t\t\t.substring(2, regexp.toString().length - 2)\n \t\t\t.replace(/\\.\\*\\?$/, '*');\n \t}\n\n \t/**\n \t* Coerce `val`.\n \t*\n \t* @param {Mixed} val\n \t* @return {Mixed}\n \t* @api private\n \t*/\n \tfunction coerce(val) {\n \t\tif (val instanceof Error) {\n \t\t\treturn val.stack || val.message;\n \t\t}\n \t\treturn val;\n \t}\n\n \t/**\n \t* XXX DO NOT USE. This is a temporary stub function.\n \t* XXX It WILL be removed in the next major release.\n \t*/\n \tfunction destroy() {\n \t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n \t}\n\n \tcreateDebug.enable(createDebug.load());\n\n \treturn createDebug;\n }\n\n module.exports = setup;\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n\n\n}, () => ({\n  'ms': _req,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}