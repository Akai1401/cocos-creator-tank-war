{"version":3,"sources":["file:///Users/akai/Data/cocos/TankWar/assets/script/tank.ts"],"names":["_decorator","Button","Collider2D","Component","Contact2DType","director","Input","input","instantiate","KeyCode","Node","Prefab","Vec3","ccclass","property","Tank","type","direction","angle","speed","previousPosition","hp","onBeginContactMyBullet","selfCollider","otherCollider","contact","node","name","setTimeout","destroy","onLoad","leftBtn","on","EventType","TOUCH_START","x","rightBtn","upBtn","y","downBtn","fireBtn","CLICK","Fire","window","socketManager","send","JSON","stringify","event","data","id","myTankId","z","TOUCH_END","start","console","log","KEY_DOWN","onKeyDown","KEY_UP","onKeyUp","update","deltaTime","pos","getPosition","add","clone","multiplyScalar","setPosition","setRotationFromEuler","currentPosition","equals","sendPosition","set","close","loadScene","bullet","PlayerPos","parent","addChild","collider","getComponent","BEGIN_CONTACT","ARROW_LEFT","keyCode","ARROW_RIGHT","ARROW_UP","ARROW_DOWN","SPACE","position"],"mappings":"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","sourcesContent":["import {\n  _decorator,\n  Button,\n  Collider2D,\n  Component,\n  Contact2DType,\n  director,\n  EventKeyboard,\n  Input,\n  input,\n  instantiate,\n  IPhysics2DContact,\n  KeyCode,\n  Node,\n  Prefab,\n  UIOpacity,\n  Vec3,\n} from \"cc\";\nconst { ccclass, property } = _decorator;\n\n@ccclass(\"Tank\")\nexport class Tank extends Component {\n  direction: Vec3 = new Vec3(0, 0, 0);\n  angle: Vec3 = new Vec3(0, 0, 0);\n  speed: number = 300;\n\n  @property({ type: Button })\n  upBtn: Button = null;\n\n  @property({ type: Button })\n  downBtn: Button = null;\n\n  @property({ type: Button })\n  leftBtn: Button = null;\n\n  @property({ type: Button })\n  rightBtn: Button = null;\n\n  @property({ type: Button })\n  fireBtn: Button = null;\n\n  @property(Prefab)\n  bullet: Prefab;\n\n  private previousPosition: Vec3 = new Vec3();\n  public hp: number = 100;\n\n  onBeginContactMyBullet(\n    selfCollider: Collider2D,\n    otherCollider: Collider2D,\n    contact: IPhysics2DContact | null\n  ) {\n    if (\n      selfCollider.node.name === \"my_bullet\" &&\n      otherCollider.node.name === \"my_bullet\"\n    ) {\n      return;\n    }\n    if (\n      otherCollider.node.name === \"wall\" ||\n      otherCollider.node.name !== \"tank\"\n    ) {\n      // hide bullet\n      setTimeout(() => {\n        selfCollider.node.destroy();\n      }, 1);\n    }\n  }\n\n  onLoad() {\n    this.leftBtn.node.on(\n      Node.EventType.TOUCH_START,\n      () => {\n        this.direction.x = -this.speed;\n        this.angle = new Vec3(0, 0, 90);\n        return;\n      },\n      this\n    );\n    this.rightBtn.node.on(Node.EventType.TOUCH_START, () => {\n      this.direction.x = this.speed;\n      this.angle = new Vec3(0, 0, -90);\n      return;\n    });\n\n    this.upBtn.node.on(Node.EventType.TOUCH_START, () => {\n      this.direction.y = this.speed;\n      this.angle = new Vec3(0, 0, 0);\n      return;\n    });\n\n    this.downBtn.node.on(Node.EventType.TOUCH_START, () => {\n      this.direction.y = -this.speed;\n      this.angle = new Vec3(0, 0, 180);\n      return;\n    });\n\n    this.fireBtn.node.on(Button.EventType.CLICK, () => {\n      this.Fire();\n      (window as any).socketManager.send(\n        JSON.stringify({\n          event: \"fire\",\n          data: { id: (window as any).myTankId, angle: this.angle.z },\n        })\n      );\n    });\n\n    this.leftBtn.node.on(Node.EventType.TOUCH_END, () => {\n      this.direction = new Vec3(0, 0, 0);\n      return;\n    });\n    this.rightBtn.node.on(Node.EventType.TOUCH_END, () => {\n      this.direction = new Vec3(0, 0, 0);\n      return;\n    });\n    this.upBtn.node.on(Node.EventType.TOUCH_END, () => {\n      this.direction = new Vec3(0, 0, 0);\n      return;\n    });\n    this.downBtn.node.on(Node.EventType.TOUCH_END, () => {\n      this.direction = new Vec3(0, 0, 0);\n      return;\n    });\n  }\n\n  start() {\n    console.log(\"PlayerController start\");\n    input.on(Input.EventType.KEY_DOWN, this.onKeyDown, this);\n    input.on(Input.EventType.KEY_UP, this.onKeyUp, this);\n  }\n\n  update(deltaTime: number) {\n    let pos = this.node.getPosition();\n    pos.add(this.direction.clone().multiplyScalar(deltaTime));\n    this.node.setPosition(pos);\n    this.node.setRotationFromEuler(this.angle);\n\n    const currentPosition = this.node.getPosition();\n\n    if (!currentPosition.equals(this.previousPosition)) {\n      this.sendPosition();\n      this.previousPosition.set(currentPosition);\n    }\n\n    if (this.hp <= 0) {\n      (window as any).socketManager.close();\n      setTimeout(() => {\n        director.loadScene(\"gameOver\");\n      }, 500);\n    }\n  }\n\n  Fire() {\n    let bullet = instantiate(this.bullet);\n    const PlayerPos = this.node.getPosition();\n    bullet.name = \"my_bullet\";\n    bullet.setPosition(PlayerPos);\n    bullet.setRotationFromEuler(this.angle);\n    this.node.parent.addChild(bullet);\n\n    let collider = bullet.getComponent(Collider2D);\n    if (collider) {\n      collider.on(\n        Contact2DType.BEGIN_CONTACT,\n        this.onBeginContactMyBullet,\n        this\n      );\n    }\n  }\n\n  onKeyDown(EventType: EventKeyboard) {\n    if (KeyCode.ARROW_LEFT == EventType.keyCode) {\n      this.direction.x = -this.speed;\n      this.angle = new Vec3(0, 0, 90);\n      return;\n    }\n    if (KeyCode.ARROW_RIGHT == EventType.keyCode) {\n      this.direction.x = this.speed;\n      this.angle = new Vec3(0, 0, -90);\n      return;\n    }\n    if (KeyCode.ARROW_UP == EventType.keyCode) {\n      this.direction.y = this.speed;\n      this.angle = new Vec3(0, 0, 0);\n      return;\n    }\n    if (KeyCode.ARROW_DOWN == EventType.keyCode) {\n      this.direction.y = -this.speed;\n      this.angle = new Vec3(0, 0, 180);\n      return;\n    }\n    if (KeyCode.SPACE == EventType.keyCode) {\n      this.Fire();\n      (window as any).socketManager.send(\n        JSON.stringify({\n          event: \"fire\",\n          data: { id: (window as any).myTankId, angle: this.angle.z },\n        })\n      );\n    }\n  }\n\n  sendPosition() {\n    (window as any).socketManager.send(\n      JSON.stringify({\n        event: \"play\",\n        data: {\n          id: (window as any).myTankId,\n          x: this.node.position.x,\n          y: this.node.position.y,\n          angle: this.angle.z,\n        },\n      })\n    );\n  }\n\n  onKeyUp(EventType: EventKeyboard) {\n    this.direction = new Vec3(0, 0, 0);\n  }\n}\n"]}