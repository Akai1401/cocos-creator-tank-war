{"version":3,"sources":["file:///Users/akai/Data/cocos/cocos-creator-tank-war/assets/script/Menu.ts"],"names":["_decorator","AudioSource","Button","Component","director","SOCKET_URL","loginByBot","ccclass","property","Menu","type","socket","onLoad","audioSource","play","WebSocket","webApp","window","Telegram","WebApp","expand","console","log","userData","initDataUnsafe","user","data","auth_date","query_id","JSON","stringify","hash","then","res","localStorage","setItem","token","catch","err","error","socketManager","userListArr","multiPlayer","node","on","EventType","CLICK","send","event","id","myTankId","telegramId","store","loadScene","onopen","onmessage","parse","gameState","alert","push","onclose"],"mappings":"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","sourcesContent":["import { _decorator, AudioSource, Button, Component, director } from \"cc\";\nimport { SOCKET_URL } from \"./constants\";\nimport { loginByBot } from \"./apis\";\n\nconst { ccclass, property } = _decorator;\n\n@ccclass(\"Menu\")\nexport class Menu extends Component {\n  // multiPlayer button\n  @property({ type: Button })\n  multiPlayer: Button = null;\n\n  // store button\n  @property({ type: Button })\n  store: Button = null;\n\n  // audio source\n  @property({\n    type: [AudioSource],\n  })\n  public audioSource: AudioSource = null!;\n\n  // websocket\n  socket: WebSocket = null;\n\n  onLoad() {\n    // play background music\n    this.audioSource.play();\n    // init websocket connection\n    this.socket = new WebSocket(SOCKET_URL);\n\n    try {\n      const webApp = (window as any).Telegram.WebApp;\n      webApp.expand();\n      console.log(\"Telegram.WebApp:\", webApp);\n      const userData = webApp?.initDataUnsafe?.user;\n      const data = {\n        auth_date: webApp?.initDataUnsafe?.auth_date,\n        query_id: webApp?.initDataUnsafe?.query_id,\n        user: JSON.stringify(userData),\n        hash: webApp?.initDataUnsafe?.hash,\n      };\n      console.log(\"login data:\", data);\n      (window as any).userData = userData;\n\n      loginByBot(data)\n        .then((res) => {\n          localStorage.setItem(\"token\", res?.token);\n        })\n        .catch((err) => {\n          console.log(err, \"err\");\n        });\n    } catch (error) {\n      console.log(\"error\", error);\n      // localStorage.setItem(\n      //   \"token\",\n      //   \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTEsInRlbGVncmFtSWQiOiI1NTE3OTgyNzM2IiwidXNlcm5hbWUiOiJBa2FpXzE0MDEiLCJpYXQiOjE3MzAyMTY3MzcsImV4cCI6MTczMDMwMzEzN30._rw8oLRDWrPfFRJyfkJgdOw7Tp4x3zPa2wdLgr-Y488\"\n      // );\n    }\n\n    // global variable\n    (window as any).socketManager = this.socket;\n    (window as any).userListArr = [];\n\n    // on click multiplayer button\n    this.multiPlayer.node.on(Button.EventType.CLICK, () => {\n      (window as any).socketManager.send(\n        JSON.stringify({\n          event: \"joinRoom\",\n          data: {\n            id: (window as any).myTankId,\n            telegramId: (window as any)?.Telegram?.WebApp\n              ? (window as any).Telegram.WebApp?.initDataUnsafe?.user?.id\n              : \"5517982736\",\n          },\n        })\n      );\n    });\n    // on click store button\n    this.store.node.on(Button.EventType.CLICK, () => {\n      director.loadScene(\"store\");\n    });\n\n    // socket listeners\n    (window as any).socketManager.onopen = (event) => {\n      console.log(\"Connected to server\");\n    };\n    (window as any).socketManager.onmessage = (event) => {\n      const data = JSON.parse(event.data);\n      // on connect event\n      if (data?.event === \"connect\") {\n        // set myTankId\n        if (data?.type === \"ME\") (window as any).myTankId = data?.id;\n      }\n      // on joinRoom event\n      if (data?.event === \"joinRoom\") {\n        // check if the game is already started\n        if (data?.gameState === \"playing\") {\n          alert(\"Please wait for the current game to finish\");\n          return;\n        } else {\n          (window as any).userListArr.push(data);\n          // (window as any).myTankColor = data?.color;\n          director.loadScene(\"room\");\n        }\n      }\n    };\n    (window as any).socketManager.onclose = (event) => {\n      console.log(\"Closed connection to server\");\n    };\n  }\n}\n"]}