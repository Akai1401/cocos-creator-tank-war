{"version":3,"sources":["file:///Users/akai/Data/cocos/cocos-creator-tank-war/assets/script/playCtrl.ts"],"names":["_decorator","Collider2D","Component","Contact2DType","director","instantiate","Label","Node","Prefab","Sprite","Vec3","Tank","colorMapping","ccclass","property","playCtrl","type","onBeginContactMyBullet","selfCollider","otherCollider","contact","node","name","setTimeout","destroy","tank","hp","window","socketManager","send","JSON","stringify","event","data","id","myTankId","HP","onLoad","userListArr","forEach","labelNode","labelComponent","addComponent","string","slice","setPosition","addChild","hpNode","hpComponent","color","getChildByName","getComponent","userNode","tankPrefab","userListContainer","onmessage","parse","x","y","setRotationFromEuler","angle","bullet","PlayerPos","getPosition","collider","on","BEGIN_CONTACT","removeChild","filter","item","newUserListArr","length","close","alert","loadScene"],"mappings":"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","sourcesContent":["import {\n  _decorator,\n  Collider2D,\n  Component,\n  Contact2DType,\n  director,\n  instantiate,\n  IPhysics2DContact,\n  Label,\n  Node,\n  Prefab,\n  Sprite,\n  UIOpacity,\n  Vec3,\n} from \"cc\";\nimport { Tank } from \"./tank\";\nimport { colorMapping } from \"./utils\";\n\nconst { ccclass, property } = _decorator;\n\n@ccclass(\"playCtrl\")\nexport class playCtrl extends Component {\n  @property({\n    type: Tank,\n  })\n  public tank: Tank;\n\n  @property({ type: Prefab })\n  public tankPrefab: Prefab = null;\n\n  @property({ type: Prefab })\n  public bullet: Prefab = null;\n\n  @property({ type: Node })\n  public userListContainer: Node = null;\n\n  onBeginContactMyBullet(\n    selfCollider: Collider2D,\n    otherCollider: Collider2D,\n    contact: IPhysics2DContact | null\n  ) {\n    if (\n      otherCollider.node.name === \"wall\" ||\n      otherCollider.node.name === \"tank\"\n    ) {\n      // hide bullet\n      setTimeout(() => {\n        selfCollider.node.destroy();\n      }, 1);\n    }\n\n    if (otherCollider.node.name === \"tank\") {\n      // reduce HP\n      this.tank.hp -= 10;\n\n      (window as any).socketManager.send(\n        JSON.stringify({\n          event: \"reduceHP\",\n          data: { id: (window as any).myTankId, HP: this.tank.hp },\n        })\n      );\n    }\n  }\n\n  onLoad() {\n    (window as any).userListArr\n      // .filter((item: any) => item?.id !== (window as any).myTankId)\n      .forEach((data: any) => {\n        // my tank\n        if (data.id === (window as any).myTankId) {\n          // create name\n          const labelNode = new Node();\n          const labelComponent = labelNode.addComponent(Label);\n          labelComponent.string = data.id.slice(0, 3) + \" (You)\";\n          labelNode.setPosition(new Vec3(0, 70, 0));\n          this.tank.node.addChild(labelNode);\n\n          // create HP\n          const hpNode = new Node();\n          const hpComponent = hpNode.addComponent(Label);\n          hpComponent.string = \"HP: \" + this.tank.hp;\n          hpNode.name = \"HP\";\n          hpNode.setPosition(new Vec3(0, 110, 0));\n          this.tank.node.addChild(hpNode);\n\n          if (colorMapping[data.color]) {\n            this.tank.node.getChildByName(\"image\").getComponent(Sprite).color =\n              colorMapping[data.color];\n          }\n          return;\n        }\n        // other tank name\n        const userNode = instantiate(this.tankPrefab);\n        const labelNode = new Node();\n        const labelComponent = labelNode.addComponent(Label);\n        labelComponent.string = data?.id?.slice(0, 3);\n        labelNode.setPosition(new Vec3(0, 70, 0));\n        // other tank HP\n        const hpNode = new Node();\n        const hpComponent = hpNode.addComponent(Label);\n        hpComponent.string = \"HP: \" + this.tank.hp;\n        hpNode.name = \"HP\";\n        hpNode.setPosition(new Vec3(0, 110, 0));\n        // other tank color\n        if (colorMapping[data.color]) {\n          userNode.getChildByName(\"image\").getComponent(Sprite).color =\n            colorMapping[data.color];\n        }\n\n        userNode.addChild(labelNode);\n        userNode.addChild(hpNode);\n        userNode.name = data?.id;\n\n        this.userListContainer.addChild(userNode);\n      });\n\n    (window as any).socketManager.onmessage = (event: any) => {\n      // console.log(\"Message from server:\", event.data);\n      const data = JSON.parse(event.data);\n      if (data?.event === \"play\") {\n        const userNode = this.userListContainer.getChildByName(data.id);\n        if (userNode) {\n          userNode.setPosition(data.x, data.y);\n          userNode.setRotationFromEuler(new Vec3(0, 0, data.angle));\n        }\n      }\n      if (data?.event === \"fire\") {\n        const userNode = this.userListContainer.getChildByName(data.id);\n        if (userNode) {\n          let bullet = instantiate(this.bullet);\n          const PlayerPos = userNode.getPosition();\n          if (bullet) {\n            bullet.setPosition(PlayerPos);\n            bullet.setRotationFromEuler(new Vec3(0, 0, data.angle));\n            this.userListContainer.addChild(bullet);\n            bullet.name = \"enemy_bullet\";\n\n            let collider = bullet.getComponent(Collider2D);\n            if (collider) {\n              collider.on(\n                Contact2DType.BEGIN_CONTACT,\n                this.onBeginContactMyBullet,\n                this\n              );\n            }\n          }\n        }\n      }\n      if (data?.event === \"reduceHP\") {\n        const userNode = this.userListContainer.getChildByName(data.id);\n        if (userNode) {\n          const hpNode = userNode.getChildByName(\"HP\");\n          if (hpNode) {\n            hpNode.getComponent(Label).string = \"HP: \" + data.HP;\n          }\n        }\n        if (data.id === (window as any).myTankId) {\n          this.tank.hp = data.HP;\n          const hpNode = this.tank.node.getChildByName(\"HP\");\n          if (hpNode) {\n            hpNode.getComponent(Label).string = \"HP: \" + data.HP;\n          }\n        }\n        if (data.HP <= 0) {\n          this.userListContainer.removeChild(\n            this.userListContainer.getChildByName(data.id)\n          );\n          (window as any).userListArr = (window as any).userListArr.filter(\n            (item: any) => item.id !== data.id\n          );\n        }\n      }\n\n      if (data?.event === \"disconnect\") {\n        this.userListContainer.removeChild(\n          this.userListContainer.getChildByName(data.id)\n        );\n        const newUserListArr = (window as any).userListArr.filter(\n          (item: any) => item.id !== data.id\n        );\n        (window as any).userListArr = newUserListArr;\n\n        if ((window as any).userListArr.length === 1) {\n          (window as any).socketManager.close();\n          setTimeout(() => {\n            alert(\"You win!\");\n            director.loadScene(\"menu\");\n          }, 500);\n        }\n      }\n    };\n  }\n}\n"]}